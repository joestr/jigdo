/*

  "Ported" to C++ by steve. Uses glibc code for the actual algorithm.

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License, version 2. See
  the file COPYING for details.

  Quite secure 256-bit checksum

*/

#ifndef SHA256SUM_IH
#define SHA256SUM_IH

#include <mimestream.hh>
//______________________________________________________________________

ostream& operator<<(ostream& s, const SHA256& r) {
  Base64String m;
  m.write(r.sum, 32).flush();
  s << m.result();
  return s;
}

string SHA256Sum::toString() const {
  const byte* d = digest();
  if (d == 0) {
    return "[SHA256_creation_not_finished]";
  } else {
    Base64String m;
    m.write(d, 32).flush();
    return m.result();
  }
}

ostream& operator<<(ostream& s, const SHA256Sum& r) {
  const byte* d = r.digest();
  if (d == 0) {
    s << "[SHA256_creation_not_finished]";
  } else {
    Base64String m;
    m.write(d, 32).flush();
    s << m.result();
  }
  return s;
}

#endif
